{"ast":null,"code":"import mongoose from \"mongoose\";\nconst Schema = mongoose.Schema;\nconst UserSchema = new Schema({\n  name: String,\n  phone: String,\n  email: String,\n  password: String,\n  token: String,\n  username: {\n    type: String\n  },\n  role: {\n    type: String,\n    default: \"user\"\n  },\n  isActive: {\n    type: Boolean,\n    default: false\n  },\n  verified: {\n    type: Boolean,\n    default: false\n  },\n  designation: {\n    type: String,\n    default: \"Regular\"\n  },\n  //if Lawyer, Student, Others\n  rank: {\n    type: Number,\n    default: 0\n  },\n  points: {\n    type: Number,\n    default: 0\n  },\n  contact: String,\n  status: String,\n  plan: String,\n  bio: String,\n  image: {\n    type: String,\n    default: \"http://placehold.jp/150x150.png\"\n  }\n}, {\n  toJSON: {\n    virtuals: true\n  },\n  timestamps: true\n});\nconst User = mongoose.models.User || mongoose.model(\"User\", UserSchema);\nexport default User; // module.exports = User;","map":{"version":3,"sources":["/home/peter/Desktop/projects/hela/law-3/src/models/User.js"],"names":["mongoose","Schema","UserSchema","name","String","phone","email","password","token","username","type","role","default","isActive","Boolean","verified","designation","rank","Number","points","contact","status","plan","bio","image","toJSON","virtuals","timestamps","User","models","model"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,MAAMC,MAAM,GAAGD,QAAQ,CAACC,MAAxB;AAEA,MAAMC,UAAU,GAAG,IAAID,MAAJ,CACjB;AACEE,EAAAA,IAAI,EAAEC,MADR;AAEEC,EAAAA,KAAK,EAAED,MAFT;AAGEE,EAAAA,KAAK,EAAEF,MAHT;AAIEG,EAAAA,QAAQ,EAAEH,MAJZ;AAKEI,EAAAA,KAAK,EAAEJ,MALT;AAMEK,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GANZ;AAOEO,EAAAA,IAAI,EAAE;AAAED,IAAAA,IAAI,EAAEN,MAAR;AAAgBQ,IAAAA,OAAO,EAAE;AAAzB,GAPR;AAQEC,EAAAA,QAAQ,EAAE;AAAEH,IAAAA,IAAI,EAAEI,OAAR;AAAiBF,IAAAA,OAAO,EAAE;AAA1B,GARZ;AASEG,EAAAA,QAAQ,EAAE;AAAEL,IAAAA,IAAI,EAAEI,OAAR;AAAiBF,IAAAA,OAAO,EAAE;AAA1B,GATZ;AAUEI,EAAAA,WAAW,EAAE;AAAEN,IAAAA,IAAI,EAAEN,MAAR;AAAgBQ,IAAAA,OAAO,EAAE;AAAzB,GAVf;AAUqD;AACnDK,EAAAA,IAAI,EAAE;AAAEP,IAAAA,IAAI,EAAEQ,MAAR;AAAgBN,IAAAA,OAAO,EAAE;AAAzB,GAXR;AAYEO,EAAAA,MAAM,EAAE;AAAET,IAAAA,IAAI,EAAEQ,MAAR;AAAgBN,IAAAA,OAAO,EAAE;AAAzB,GAZV;AAaEQ,EAAAA,OAAO,EAAEhB,MAbX;AAcEiB,EAAAA,MAAM,EAAEjB,MAdV;AAeEkB,EAAAA,IAAI,EAAElB,MAfR;AAgBEmB,EAAAA,GAAG,EAAEnB,MAhBP;AAiBEoB,EAAAA,KAAK,EAAE;AAAEd,IAAAA,IAAI,EAAEN,MAAR;AAAgBQ,IAAAA,OAAO,EAAE;AAAzB;AAjBT,CADiB,EAoBjB;AAAEa,EAAAA,MAAM,EAAE;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAAV;AAA8BC,EAAAA,UAAU,EAAE;AAA1C,CApBiB,CAAnB;AAuBA,MAAMC,IAAI,GAAG5B,QAAQ,CAAC6B,MAAT,CAAgBD,IAAhB,IAAwB5B,QAAQ,CAAC8B,KAAT,CAAe,MAAf,EAAuB5B,UAAvB,CAArC;AACA,eAAe0B,IAAf,C,CACA","sourcesContent":["import mongoose from \"mongoose\";\nconst Schema = mongoose.Schema;\n\nconst UserSchema = new Schema(\n  {\n    name: String,\n    phone: String,\n    email: String,\n    password: String,\n    token: String,\n    username: { type: String },\n    role: { type: String, default: \"user\" },\n    isActive: { type: Boolean, default: false },\n    verified: { type: Boolean, default: false },\n    designation: { type: String, default: \"Regular\" }, //if Lawyer, Student, Others\n    rank: { type: Number, default: 0 },\n    points: { type: Number, default: 0 },\n    contact: String,\n    status: String,\n    plan: String,\n    bio: String,\n    image: { type: String, default: \"http://placehold.jp/150x150.png\" },\n  },\n  { toJSON: { virtuals: true }, timestamps: true }\n);\n\nconst User = mongoose.models.User || mongoose.model(\"User\", UserSchema);\nexport default User;\n// module.exports = User;\n"]},"metadata":{},"sourceType":"module"}