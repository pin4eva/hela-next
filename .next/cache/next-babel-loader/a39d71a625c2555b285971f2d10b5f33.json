{"ast":null,"code":"import { gql } from \"apollo-server-micro\";\nexport const ReportTypes = gql`\n  type Report {\n    _id: ID\n    court: String\n    suit_no: String\n    title: String\n    appellant: String\n    respondent: String\n    c_appellant: String\n    c_respondent: String\n    appeal: String\n    issues_of_law: String\n    summary: String\n    determination: String\n    date: String\n    judges: String\n    vol: String\n    year: String\n    ratios: String\n    cases_cited: String\n    books_cited: String\n    judgement: String\n    likes: Int\n    caseRef: String\n    slug: String\n    createdAt: Date\n    comments: [RepComment]\n    added_by: User\n    updated_by: User\n    parties: String\n  }\n\n  type RepComment {\n    _id: ID\n    author: User\n    content: String!\n    likes: Int\n    approved: Boolean\n    createdAt: Date\n    report: Report\n  }\n\n  input ReportInput {\n    _id: ID\n    court: String\n    suit_no: String\n    title: String\n    appellant: String\n    respondent: String\n    c_appellant: String\n    c_respondent: String\n    appeal: String\n    issues_of_law: String\n    summary: String\n    determination: String\n    date: String\n    judges: String\n    vol: String\n    year: String\n    ratios: String\n    cases_cited: String\n    books_cited: String\n    judgement: String\n    likes: Int\n    caseRef: String\n    slug: String\n    createdAt: Date\n    parties: String\n  }\n  extend type Query {\n    # Report\n    getReports: [Report]\n    getLimitedReports(skip: Int, limit: Int): [Report]\n    getReport(slug: String): Report\n    getMyReports(skip: Int, limit: Int): [Report]\n    # RepComment\n    getRepComments: [RepComment]\n    getRepCommentsByReport(report: ID): [RepComment]\n  }\n\n  extend type Mutation {\n    # Report\n    addReport(input: ReportInput): Report\n    updateReport(input: ReportInput): Report\n    deleteReport(_id: ID): Report\n    likeReport(_id: ID): Int\n\n    # RepComment\n    addRepComment(report: ID, content: String, author: ID): RepComment\n    likeRepComment(_id: ID): RepComment\n    deleteRepComment(_id: ID): RepComment\n  }\n`;","map":{"version":3,"sources":["/home/peter/Desktop/projects/hela/law-3/src/graphql/typeDefs/reportType.js"],"names":["gql","ReportTypes"],"mappings":"AAAA,SAASA,GAAT,QAAoB,qBAApB;AAEA,OAAO,MAAMC,WAAW,GAAGD,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA5FO","sourcesContent":["import { gql } from \"apollo-server-micro\";\n\nexport const ReportTypes = gql`\n  type Report {\n    _id: ID\n    court: String\n    suit_no: String\n    title: String\n    appellant: String\n    respondent: String\n    c_appellant: String\n    c_respondent: String\n    appeal: String\n    issues_of_law: String\n    summary: String\n    determination: String\n    date: String\n    judges: String\n    vol: String\n    year: String\n    ratios: String\n    cases_cited: String\n    books_cited: String\n    judgement: String\n    likes: Int\n    caseRef: String\n    slug: String\n    createdAt: Date\n    comments: [RepComment]\n    added_by: User\n    updated_by: User\n    parties: String\n  }\n\n  type RepComment {\n    _id: ID\n    author: User\n    content: String!\n    likes: Int\n    approved: Boolean\n    createdAt: Date\n    report: Report\n  }\n\n  input ReportInput {\n    _id: ID\n    court: String\n    suit_no: String\n    title: String\n    appellant: String\n    respondent: String\n    c_appellant: String\n    c_respondent: String\n    appeal: String\n    issues_of_law: String\n    summary: String\n    determination: String\n    date: String\n    judges: String\n    vol: String\n    year: String\n    ratios: String\n    cases_cited: String\n    books_cited: String\n    judgement: String\n    likes: Int\n    caseRef: String\n    slug: String\n    createdAt: Date\n    parties: String\n  }\n  extend type Query {\n    # Report\n    getReports: [Report]\n    getLimitedReports(skip: Int, limit: Int): [Report]\n    getReport(slug: String): Report\n    getMyReports(skip: Int, limit: Int): [Report]\n    # RepComment\n    getRepComments: [RepComment]\n    getRepCommentsByReport(report: ID): [RepComment]\n  }\n\n  extend type Mutation {\n    # Report\n    addReport(input: ReportInput): Report\n    updateReport(input: ReportInput): Report\n    deleteReport(_id: ID): Report\n    likeReport(_id: ID): Int\n\n    # RepComment\n    addRepComment(report: ID, content: String, author: ID): RepComment\n    likeRepComment(_id: ID): RepComment\n    deleteRepComment(_id: ID): RepComment\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}