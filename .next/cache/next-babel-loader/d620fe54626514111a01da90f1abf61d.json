{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/peter/Desktop/projects/hela/law-3/src/components/shared/ThemeButton.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Spinner } from \"theme-ui\"; // import { theme } from \"theme\";\n\nconst ThemeButton = props => {\n  return /*#__PURE__*/_jsxDEV(Wrapper, _objectSpread(_objectSpread({}, props), {}, {\n    children: props.loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        size: \"25\",\n        color: \"#fff\",\n        className: \"mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this), \" Loading...\"]\n    }, void 0, true) : props.children\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\nThemeButton.propTypes = {\n  children: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\nThemeButton.defaultProps = {\n  loading: false\n}; // ThemeButton.defaultProps = {\n//   loading: true,\n// };\n// const Wrapper = styled(Button)`\n//   color: blue;\n//   background-color: blue;\n//   padding: 3rem;\n// `;\n\nconst Wrapper = styled.button``;\nexport default ThemeButton;","map":{"version":3,"sources":["/home/peter/Desktop/projects/hela/law-3/src/components/shared/ThemeButton.js"],"names":["React","PropTypes","styled","Spinner","ThemeButton","props","loading","children","propTypes","string","bool","isRequired","defaultProps","Wrapper","button"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,UAAxB,C,CACA;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,sBACE,QAAC,OAAD,kCAAaA,KAAb;AAAA,cACGA,KAAK,CAACC,OAAN,gBACC;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAC,IAAd;AAAmB,QAAA,KAAK,EAAC,MAAzB;AAAgC,QAAA,SAAS,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,cADF;AAAA,oBADD,GAKCD,KAAK,CAACE;AANV;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAZD;;AAcAH,WAAW,CAACI,SAAZ,GAAwB;AACtBD,EAAAA,QAAQ,EAAEN,SAAS,CAACQ,MADE;AAEtBH,EAAAA,OAAO,EAAEL,SAAS,CAACS,IAAV,CAAeC;AAFF,CAAxB;AAIAP,WAAW,CAACQ,YAAZ,GAA2B;AACzBN,EAAAA,OAAO,EAAE;AADgB,CAA3B,C,CAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMO,OAAO,GAAGX,MAAM,CAACY,MAAO,EAA9B;AAEA,eAAeV,WAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Spinner } from \"theme-ui\";\n// import { theme } from \"theme\";\n\nconst ThemeButton = (props) => {\n  return (\n    <Wrapper {...props}>\n      {props.loading ? (\n        <>\n          <Spinner size=\"25\" color=\"#fff\" className=\"mr-2\" /> Loading...\n        </>\n      ) : (\n        props.children\n      )}\n    </Wrapper>\n  );\n};\n\nThemeButton.propTypes = {\n  children: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\nThemeButton.defaultProps = {\n  loading: false,\n};\n\n// ThemeButton.defaultProps = {\n//   loading: true,\n// };\n\n// const Wrapper = styled(Button)`\n//   color: blue;\n//   background-color: blue;\n//   padding: 3rem;\n// `;\n\nconst Wrapper = styled.button``;\n\nexport default ThemeButton;\n"]},"metadata":{},"sourceType":"module"}