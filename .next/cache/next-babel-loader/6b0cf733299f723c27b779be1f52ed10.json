{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport reports from \"./reportsResolver\";\nimport judges from \"./judgesResolvers\";\nimport users from \"./userResolver\";\nimport notes from \"../resolvers/noteResolvers\";\nimport Question from \"../resolvers/questionResolvers\";\nimport { dateScalar } from \"./scalarType\"; // module.exports = {\n//   Query: {\n//     ...judges.Query,\n//     ...reports.Query,\n//     ...users.Query,\n//   },\n//   Mutation: {\n//     ...reports.Mutation,\n//     ...judges.Mutation,\n//     ...users.Mutation,\n//   },\n//   Date: dateScalar,\n// }\n\nconst resolvers = {\n  Query: _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, judges.Query), reports.Query), users.Query), notes.Query), Question.Query),\n  Mutation: _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, reports.Mutation), judges.Mutation), users.Mutation), notes.Mutation), Question.Mutation),\n  Date: dateScalar\n};\nexport default resolvers;","map":{"version":3,"sources":["/home/peter/Desktop/projects/hela/law-3/src/graphql/resolvers/index.js"],"names":["reports","judges","users","notes","Question","dateScalar","resolvers","Query","Mutation","Date"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,mBAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,UAAT,QAA2B,cAA3B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,4EACAN,MAAM,CAACM,KADP,GAEAP,OAAO,CAACO,KAFR,GAGAL,KAAK,CAACK,KAHN,GAIAJ,KAAK,CAACI,KAJN,GAKAH,QAAQ,CAACG,KALT,CADW;AAQhBC,EAAAA,QAAQ,4EACHR,OAAO,CAACQ,QADL,GAEHP,MAAM,CAACO,QAFJ,GAGHN,KAAK,CAACM,QAHH,GAIHL,KAAK,CAACK,QAJH,GAKHJ,QAAQ,CAACI,QALN,CARQ;AAehBC,EAAAA,IAAI,EAAEJ;AAfU,CAAlB;AAkBA,eAAeC,SAAf","sourcesContent":["import reports from \"./reportsResolver\";\nimport judges from \"./judgesResolvers\";\nimport users from \"./userResolver\";\nimport notes from \"../resolvers/noteResolvers\";\nimport Question from \"../resolvers/questionResolvers\";\nimport { dateScalar } from \"./scalarType\";\n\n// module.exports = {\n//   Query: {\n//     ...judges.Query,\n//     ...reports.Query,\n//     ...users.Query,\n//   },\n//   Mutation: {\n//     ...reports.Mutation,\n//     ...judges.Mutation,\n//     ...users.Mutation,\n//   },\n//   Date: dateScalar,\n// }\n\nconst resolvers = {\n  Query: {\n    ...judges.Query,\n    ...reports.Query,\n    ...users.Query,\n    ...notes.Query,\n    ...Question.Query,\n  },\n  Mutation: {\n    ...reports.Mutation,\n    ...judges.Mutation,\n    ...users.Mutation,\n    ...notes.Mutation,\n    ...Question.Mutation,\n  },\n  Date: dateScalar,\n};\n\nexport default resolvers;\n"]},"metadata":{},"sourceType":"module"}