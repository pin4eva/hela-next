{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/peter/Desktop/projects/hela/law-3/src/components/dashboard/DashboardAside.js\";\nimport React, { useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Image from \"next/image\";\nimport { useRecoilState } from \"recoil\";\nimport { DSidebar } from \"atoms/DashboardSideBar\";\nimport Link from \"next/link\";\nimport { useAwayListener } from \"../AwayListner\";\n\nconst DashboardAside = () => {\n  const [isOpen, setIsOpen] = useRecoilState(DSidebar);\n  const ref = useRef(null);\n  useAwayListener(ref, () => setIsOpen(false));\n  return /*#__PURE__*/_jsxDEV(Aside, {\n    className: `dashboard-aside bg-green ${isOpen ? \"open\" : \"\"}`,\n    ref: ref,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-wrapper text-light py-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex container  align-items-center justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"m-0\",\n          children: \"Hela\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-cog text-light-green d-md-none\" // onClick={() => setIsOpen(!isOpen)}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-image\",\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              className: \"rounded-circle\",\n              src: \"/images/my-dp.jpg\",\n              width: \"100\",\n              height: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"profile-username my-3 font-weight-bold\",\n              children: \"Peter Akaliro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"links mt-5\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"nav flex-column \",\n          children: navLinks.map((nav, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: nav.link,\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"nav-link font-weight-bold\",\n                children: nav.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\nDashboardAside.propTypes = {\n  isOpen: PropTypes.bool\n};\nDashboardAside.defaultProps = {\n  isOpen: true\n};\nconst Aside = styled.aside`\n  .links {\n    width: 100%;\n\n    .nav {\n      width: 100%;\n    }\n  }\n  .profile {\n    margin: 3rem 0;\n  }\n`;\nexport default DashboardAside;\nconst navLinks = [{\n  name: \"Reports\",\n  link: \"/dashboard/reports\"\n}, {\n  name: \"Practice Notes\",\n  link: \"/dashboard/notes\"\n}, {\n  name: \"Q & A\",\n  link: \"/dashboard/questions\"\n}, {\n  name: \"Settings\",\n  link: \"/dashboard/settings\"\n}];","map":{"version":3,"sources":["/home/peter/Desktop/projects/hela/law-3/src/components/dashboard/DashboardAside.js"],"names":["React","useRef","PropTypes","styled","Image","useRecoilState","DSidebar","Link","useAwayListener","DashboardAside","isOpen","setIsOpen","ref","navLinks","map","nav","i","link","name","propTypes","bool","defaultProps","Aside","aside"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Image from \"next/image\";\nimport { useRecoilState } from \"recoil\";\nimport { DSidebar } from \"atoms/DashboardSideBar\";\nimport Link from \"next/link\";\nimport { useAwayListener } from \"../AwayListner\";\n\nconst DashboardAside = () => {\n  const [isOpen, setIsOpen] = useRecoilState(DSidebar);\n  const ref = useRef(null);\n  useAwayListener(ref, () => setIsOpen(false));\n\n  return (\n    <Aside\n      className={`dashboard-aside bg-green ${isOpen ? \"open\" : \"\"}`}\n      ref={ref}\n    >\n      <div className=\"sidebar-wrapper text-light py-3\">\n        <div className=\"d-flex container  align-items-center justify-content-between\">\n          <h6 className=\"m-0\">Hela</h6>{\" \"}\n          <i\n            className=\"fas fa-cog text-light-green d-md-none\"\n            // onClick={() => setIsOpen(!isOpen)}\n          ></i>\n        </div>\n        <div className=\"profile container\">\n          <div className=\"text-center\">\n            <div className=\"profile-image\">\n              <Image\n                className=\"rounded-circle\"\n                src=\"/images/my-dp.jpg\"\n                width=\"100\"\n                height=\"100\"\n              />\n              <p className=\"profile-username my-3 font-weight-bold\">\n                Peter Akaliro\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"links mt-5\">\n          <ul className=\"nav flex-column \">\n            {navLinks.map((nav, i) => (\n              <li className=\"nav-item\" key={i}>\n                <Link href={nav.link}>\n                  <a className=\"nav-link font-weight-bold\">{nav.name}</a>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </Aside>\n  );\n};\n\nDashboardAside.propTypes = {\n  isOpen: PropTypes.bool,\n};\n\nDashboardAside.defaultProps = {\n  isOpen: true,\n};\n\nconst Aside = styled.aside`\n  .links {\n    width: 100%;\n\n    .nav {\n      width: 100%;\n    }\n  }\n  .profile {\n    margin: 3rem 0;\n  }\n`;\n\nexport default DashboardAside;\n\nconst navLinks = [\n  { name: \"Reports\", link: \"/dashboard/reports\" },\n  { name: \"Practice Notes\", link: \"/dashboard/notes\" },\n  { name: \"Q & A\", link: \"/dashboard/questions\" },\n  { name: \"Settings\", link: \"/dashboard/settings\" },\n];\n"]},"metadata":{},"sourceType":"module"}