{"ast":null,"code":"import { gql } from \"apollo-server-micro\";\nexport const UserType = gql`\n  type User {\n    _id: ID\n    name: String\n    phone: String\n    email: String\n    username: String\n    password: String\n    token: String\n    role: String\n    isActive: Boolean\n    designation: String\n    rank: Int\n    points: Int\n    contact: String\n    status: String\n    plan: String\n    bio: String\n    image: String\n    verified: Boolean\n    createdAt: Date\n  }\n\n  type Token {\n    token: String\n    user: User\n  }\n\n  extend type Query {\n    # Users Query\n    getUsers: [User]\n    getUser(_id: ID!): User\n    me(token: String): User\n    auth: User\n  }\n\n  extend type Mutation {\n    # User Mutations\n    signup(input: SignupInput): User\n    login(email: String, password: String): Token\n    updateUser(input: SignupInput): User\n    deleteUser(_id: ID): User\n    verify(token: String): User\n    forgotPassword(token: String, password: String): User\n    changePassword(password: String!, oldPassword: String!): User\n    checkEmail(email: String): User\n  }\n\n  input SignupInput {\n    _id: ID\n    name: String\n    phone: String\n    verified: Boolean\n    email: String\n    password: String\n    token: String\n    role: String\n    isActive: Boolean\n    designation: String\n    rank: Int\n    points: Int\n    contact: String\n    status: String\n    plan: String\n    bio: String\n    image: String\n    username: String\n  }\n`;","map":{"version":3,"sources":["/home/peter/Desktop/projects/hela/law-3/src/graphql/typeDefs/userType.js"],"names":["gql","UserType"],"mappings":"AAAA,SAASA,GAAT,QAAoB,qBAApB;AAEA,OAAO,MAAMC,QAAQ,GAAGD,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApEO","sourcesContent":["import { gql } from \"apollo-server-micro\";\n\nexport const UserType = gql`\n  type User {\n    _id: ID\n    name: String\n    phone: String\n    email: String\n    username: String\n    password: String\n    token: String\n    role: String\n    isActive: Boolean\n    designation: String\n    rank: Int\n    points: Int\n    contact: String\n    status: String\n    plan: String\n    bio: String\n    image: String\n    verified: Boolean\n    createdAt: Date\n  }\n\n  type Token {\n    token: String\n    user: User\n  }\n\n  extend type Query {\n    # Users Query\n    getUsers: [User]\n    getUser(_id: ID!): User\n    me(token: String): User\n    auth: User\n  }\n\n  extend type Mutation {\n    # User Mutations\n    signup(input: SignupInput): User\n    login(email: String, password: String): Token\n    updateUser(input: SignupInput): User\n    deleteUser(_id: ID): User\n    verify(token: String): User\n    forgotPassword(token: String, password: String): User\n    changePassword(password: String!, oldPassword: String!): User\n    checkEmail(email: String): User\n  }\n\n  input SignupInput {\n    _id: ID\n    name: String\n    phone: String\n    verified: Boolean\n    email: String\n    password: String\n    token: String\n    role: String\n    isActive: Boolean\n    designation: String\n    rank: Int\n    points: Int\n    contact: String\n    status: String\n    plan: String\n    bio: String\n    image: String\n    username: String\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}