{"ast":null,"code":"import mongoose from \"mongoose\";\nimport slug from \"mongoose-slug-generator\";\nconst Schema = mongoose.Schema;\nconst ReportSchema = new Schema({\n  court: String,\n  suit_no: String,\n  title: String,\n  appellant: String,\n  respondent: String,\n  c_appellant: String,\n  c_respondent: String,\n  appeal: String,\n  issues_of_law: String,\n  summary: String,\n  determination: String,\n  date: String,\n  judges: String,\n  vol: String,\n  year: String,\n  ratios: String,\n  cases_cited: String,\n  books_cited: String,\n  judgement: String,\n  likes: {\n    type: Number,\n    default: 0\n  },\n  caseRef: String,\n  slug: {\n    type: String,\n    slug: \"title\"\n  },\n  // createdAt: { type: Date, default: Date.now },\n  comments: [{\n    type: Schema.Types.ObjectId,\n    ref: \"RepComment\"\n  }],\n  judgesList: [{\n    type: Schema.Types.ObjectId,\n    ref: \"Judge\"\n  }],\n  added_by: {\n    type: Schema.Types.ObjectId,\n    ref: \"User\"\n  },\n  updated_by: {\n    type: Schema.Types.ObjectId,\n    ref: \"User\"\n  },\n  parties: {\n    type: String,\n    default: \"\"\n  } // deleted_by: { type: Schema.Types.ObjectId, ref: \"User\" },\n\n}, {\n  timestamps: true\n});\nReportSchema.plugin(slug);\nconst RepCommentSchema = new Schema({\n  content: String,\n  author: {\n    type: Schema.Types.ObjectId,\n    ref: \"User\"\n  },\n  likes: {\n    type: Number,\n    default: 0\n  },\n  approved: {\n    type: Boolean,\n    default: false\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now\n  },\n  report: {\n    type: Schema.Types.ObjectId,\n    ref: \"Report\"\n  }\n});\nexport const Report = mongoose.models.Report || mongoose.model(\"Report\", ReportSchema);\nexport const RepComment = mongoose.models.RepComment || mongoose.model(\"RepComment\", RepCommentSchema); // module.exports = {\n//   Report,\n//   RepComment,\n// };","map":{"version":3,"sources":["/home/peter/Desktop/projects/hela/law-3/src/models/Report.js"],"names":["mongoose","slug","Schema","ReportSchema","court","String","suit_no","title","appellant","respondent","c_appellant","c_respondent","appeal","issues_of_law","summary","determination","date","judges","vol","year","ratios","cases_cited","books_cited","judgement","likes","type","Number","default","caseRef","comments","Types","ObjectId","ref","judgesList","added_by","updated_by","parties","timestamps","plugin","RepCommentSchema","content","author","approved","Boolean","createdAt","Date","now","report","Report","models","model","RepComment"],"mappings":"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","sourcesContent":["import mongoose from \"mongoose\";\nimport slug from \"mongoose-slug-generator\";\nconst Schema = mongoose.Schema;\n\nconst ReportSchema = new Schema(\n  {\n    court: String,\n    suit_no: String,\n    title: String,\n    appellant: String,\n    respondent: String,\n    c_appellant: String,\n    c_respondent: String,\n    appeal: String,\n    issues_of_law: String,\n    summary: String,\n    determination: String,\n    date: String,\n    judges: String,\n    vol: String,\n    year: String,\n    ratios: String,\n    cases_cited: String,\n    books_cited: String,\n    judgement: String,\n    likes: { type: Number, default: 0 },\n    caseRef: String,\n    slug: { type: String, slug: \"title\" },\n    // createdAt: { type: Date, default: Date.now },\n    comments: [{ type: Schema.Types.ObjectId, ref: \"RepComment\" }],\n    judgesList: [{ type: Schema.Types.ObjectId, ref: \"Judge\" }],\n    added_by: { type: Schema.Types.ObjectId, ref: \"User\" },\n    updated_by: { type: Schema.Types.ObjectId, ref: \"User\" },\n    parties: { type: String, default: \"\" },\n    // deleted_by: { type: Schema.Types.ObjectId, ref: \"User\" },\n  },\n  {\n    timestamps: true,\n  }\n);\n\nReportSchema.plugin(slug);\n\nconst RepCommentSchema = new Schema({\n  content: String,\n  author: { type: Schema.Types.ObjectId, ref: \"User\" },\n  likes: { type: Number, default: 0 },\n  approved: { type: Boolean, default: false },\n  createdAt: { type: Date, default: Date.now },\n  report: { type: Schema.Types.ObjectId, ref: \"Report\" },\n});\n\nexport const Report =\n  mongoose.models.Report || mongoose.model(\"Report\", ReportSchema);\nexport const RepComment =\n  mongoose.models.RepComment || mongoose.model(\"RepComment\", RepCommentSchema);\n\n// module.exports = {\n//   Report,\n//   RepComment,\n// };\n"]},"metadata":{},"sourceType":"module"}