{"ast":null,"code":"const mongoose = require(\"mongoose\");\n\nconst slug = require(\"mongoose-slug-generator\");\n\nconst Schema = mongoose.Schema;\nconst QuestionSchema = new Schema({\n  category: String,\n  title: String,\n  content: String,\n  like: {\n    type: Number,\n    default: 0\n  },\n  answers: [{\n    type: Schema.Types.ObjectId,\n    ref: \"Answer\"\n  }],\n  author: {\n    type: Schema.Types.ObjectId,\n    ref: \"User\"\n  },\n  slug: {\n    type: String,\n    slug: \"title\"\n  }\n}, {\n  toJSON: {\n    virtuals: true\n  },\n  timestamps: true\n});\nconst AnswerSchema = new Schema({\n  content: String,\n  author: {\n    type: Schema.Types.ObjectId,\n    ref: \"User\"\n  },\n  vote: {\n    type: Number,\n    default: 0\n  },\n  upVote: {\n    type: Number,\n    default: 0\n  },\n  downVote: {\n    type: Number,\n    default: 0\n  },\n  isCorrect: {\n    type: Boolean,\n    default: false\n  },\n  question: {\n    type: Schema.Types.ObjectId,\n    ref: \"Question\"\n  }\n}, {\n  toJSON: {\n    virtuals: true\n  },\n  timestamps: true\n});\nQuestionSchema.plugin(slug);\nexport const Question = mongoose.models.Question || mongoose.model(\"Question\", QuestionSchema);\nexport const Answer = mongoose.models.Answer || mongoose.model(\"Answer\", AnswerSchema); // module.exports = { Question, Answer };","map":{"version":3,"sources":["/home/peter/Desktop/projects/hela/law-3/src/models/Question.js"],"names":["mongoose","require","slug","Schema","QuestionSchema","category","String","title","content","like","type","Number","default","answers","Types","ObjectId","ref","author","toJSON","virtuals","timestamps","AnswerSchema","vote","upVote","downVote","isCorrect","Boolean","question","plugin","Question","models","model","Answer"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,yBAAD,CAApB;;AAEA,MAAME,MAAM,GAAGH,QAAQ,CAACG,MAAxB;AAEA,MAAMC,cAAc,GAAG,IAAID,MAAJ,CACrB;AACEE,EAAAA,QAAQ,EAAEC,MADZ;AAEEC,EAAAA,KAAK,EAAED,MAFT;AAGEE,EAAAA,OAAO,EAAEF,MAHX;AAIEG,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,OAAO,EAAE;AAAzB,GAJR;AAKEC,EAAAA,OAAO,EAAE,CAAC;AAAEH,IAAAA,IAAI,EAAEP,MAAM,CAACW,KAAP,CAAaC,QAArB;AAA+BC,IAAAA,GAAG,EAAE;AAApC,GAAD,CALX;AAMEC,EAAAA,MAAM,EAAE;AAAEP,IAAAA,IAAI,EAAEP,MAAM,CAACW,KAAP,CAAaC,QAArB;AAA+BC,IAAAA,GAAG,EAAE;AAApC,GANV;AAOEd,EAAAA,IAAI,EAAE;AAAEQ,IAAAA,IAAI,EAAEJ,MAAR;AAAgBJ,IAAAA,IAAI,EAAE;AAAtB;AAPR,CADqB,EAUrB;AAAEgB,EAAAA,MAAM,EAAE;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAAV;AAA8BC,EAAAA,UAAU,EAAE;AAA1C,CAVqB,CAAvB;AAaA,MAAMC,YAAY,GAAG,IAAIlB,MAAJ,CACnB;AACEK,EAAAA,OAAO,EAAEF,MADX;AAEEW,EAAAA,MAAM,EAAE;AAAEP,IAAAA,IAAI,EAAEP,MAAM,CAACW,KAAP,CAAaC,QAArB;AAA+BC,IAAAA,GAAG,EAAE;AAApC,GAFV;AAGEM,EAAAA,IAAI,EAAE;AAAEZ,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,OAAO,EAAE;AAAzB,GAHR;AAIEW,EAAAA,MAAM,EAAE;AAAEb,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,OAAO,EAAE;AAAzB,GAJV;AAKEY,EAAAA,QAAQ,EAAE;AAAEd,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,OAAO,EAAE;AAAzB,GALZ;AAMEa,EAAAA,SAAS,EAAE;AAAEf,IAAAA,IAAI,EAAEgB,OAAR;AAAiBd,IAAAA,OAAO,EAAE;AAA1B,GANb;AAOEe,EAAAA,QAAQ,EAAE;AAAEjB,IAAAA,IAAI,EAAEP,MAAM,CAACW,KAAP,CAAaC,QAArB;AAA+BC,IAAAA,GAAG,EAAE;AAApC;AAPZ,CADmB,EAUnB;AAAEE,EAAAA,MAAM,EAAE;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAAV;AAA8BC,EAAAA,UAAU,EAAE;AAA1C,CAVmB,CAArB;AAaAhB,cAAc,CAACwB,MAAf,CAAsB1B,IAAtB;AACA,OAAO,MAAM2B,QAAQ,GACnB7B,QAAQ,CAAC8B,MAAT,CAAgBD,QAAhB,IAA4B7B,QAAQ,CAAC+B,KAAT,CAAe,UAAf,EAA2B3B,cAA3B,CADvB;AAEP,OAAO,MAAM4B,MAAM,GACjBhC,QAAQ,CAAC8B,MAAT,CAAgBE,MAAhB,IAA0BhC,QAAQ,CAAC+B,KAAT,CAAe,QAAf,EAAyBV,YAAzB,CADrB,C,CAGP","sourcesContent":["const mongoose = require(\"mongoose\");\nconst slug = require(\"mongoose-slug-generator\");\n\nconst Schema = mongoose.Schema;\n\nconst QuestionSchema = new Schema(\n  {\n    category: String,\n    title: String,\n    content: String,\n    like: { type: Number, default: 0 },\n    answers: [{ type: Schema.Types.ObjectId, ref: \"Answer\" }],\n    author: { type: Schema.Types.ObjectId, ref: \"User\" },\n    slug: { type: String, slug: \"title\" },\n  },\n  { toJSON: { virtuals: true }, timestamps: true }\n);\n\nconst AnswerSchema = new Schema(\n  {\n    content: String,\n    author: { type: Schema.Types.ObjectId, ref: \"User\" },\n    vote: { type: Number, default: 0 },\n    upVote: { type: Number, default: 0 },\n    downVote: { type: Number, default: 0 },\n    isCorrect: { type: Boolean, default: false },\n    question: { type: Schema.Types.ObjectId, ref: \"Question\" },\n  },\n  { toJSON: { virtuals: true }, timestamps: true }\n);\n\nQuestionSchema.plugin(slug);\nexport const Question =\n  mongoose.models.Question || mongoose.model(\"Question\", QuestionSchema);\nexport const Answer =\n  mongoose.models.Answer || mongoose.model(\"Answer\", AnswerSchema);\n\n// module.exports = { Question, Answer };\n"]},"metadata":{},"sourceType":"module"}